package service

import (
	"github.com/ekokurniadi/pos-golang/entity"
	"github.com/ekokurniadi/pos-golang/input"
	"github.com/ekokurniadi/pos-golang/repository"
)

type SatuanService interface {
	SatuanServiceGetAll() ([]entity.Satuan, error)
	SatuanServiceGetByID(inputID input.InputIDSatuan) (entity.Satuan, error)
	SatuanServiceCreate(input input.SatuanInput) (entity.Satuan, error)
	SatuanServiceUpdate(inputID input.InputIDSatuan, inputData input.SatuanInput) (entity.Satuan, error)
	SatuanServiceDeleteByID(inputID input.InputIDSatuan) (bool, error)
}
type satuanService struct {
	repository repository.SatuanRepository
}

func NewSatuanService(repository repository.SatuanRepository) *satuanService {
	return &satuanService{repository}
}
func (s *satuanService) SatuanServiceCreate(input input.SatuanInput) (entity.Satuan, error) {
	satuan := entity.Satuan{}
	satuan.Satuan = input.Satuan
	newSatuan, err := s.repository.SaveSatuan(satuan)
	if err != nil {
		return newSatuan, err
	}
	return newSatuan, nil
}
func (s *satuanService) SatuanServiceUpdate(inputID input.InputIDSatuan, inputData input.SatuanInput) (entity.Satuan, error) {
	satuan, err := s.repository.FindByIDSatuan(inputID.ID)
	if err != nil {
		return satuan, err
	}
	satuan.Satuan = inputData.Satuan

	updatedSatuan, err := s.repository.UpdateSatuan(satuan)

	if err != nil {
		return updatedSatuan, err
	}
	return updatedSatuan, nil
}
func (s *satuanService) SatuanServiceGetByID(inputID input.InputIDSatuan) (entity.Satuan, error) {
	satuan, err := s.repository.FindByIDSatuan(inputID.ID)
	if err != nil {
		return satuan, err
	}
	return satuan, nil
}
func (s *satuanService) SatuanServiceGetAll() ([]entity.Satuan, error) {
	satuans, err := s.repository.FindAllSatuan()
	if err != nil {
		return satuans, err
	}
	return satuans, nil
}
func (s *satuanService) SatuanServiceDeleteByID(inputID input.InputIDSatuan) (bool, error) {
	_, err := s.repository.FindByIDSatuan(inputID.ID)
	if err != nil {
		return false, err
	}
	_, err = s.repository.DeleteByIDSatuan(inputID.ID)
	if err != nil {
		return false, err
	}
	return true, nil
}

//Generated by Micagen at 08 Desember 2021
