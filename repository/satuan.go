package repository

import (
	"github.com/ekokurniadi/pos-golang/entity"
	"gorm.io/gorm"
)

type SatuanRepository interface {
	SaveSatuan(satuan entity.Satuan) (entity.Satuan, error)
	UpdateSatuan(satuan entity.Satuan) (entity.Satuan, error)
	FindByIDSatuan(ID int) (entity.Satuan, error)
	FindAllSatuan() ([]entity.Satuan, error)
	DeleteByIDSatuan(ID int) (entity.Satuan, error)
}

type satuanRepository struct {
	db *gorm.DB
}

func NewSatuanRepository(db *gorm.DB) *satuanRepository {
	return &satuanRepository{db}
}

func (r *satuanRepository) SaveSatuan(satuan entity.Satuan) (entity.Satuan, error) {
	err := r.db.Create(&satuan).Error
	if err != nil {
		return satuan, err
	}
	return satuan, nil

}
func (r *satuanRepository) FindByIDSatuan(ID int) (entity.Satuan, error) {
	var satuan entity.Satuan
	err := r.db.Where("id = ? ", ID).Find(&satuan).Error
	if err != nil {
		return satuan, err
	}
	return satuan, nil

}
func (r *satuanRepository) UpdateSatuan(satuan entity.Satuan) (entity.Satuan, error) {
	err := r.db.Save(&satuan).Error
	if err != nil {
		return satuan, err
	}
	return satuan, nil

}
func (r *satuanRepository) FindAllSatuan() ([]entity.Satuan, error) {
	var satuans []entity.Satuan
	err := r.db.Find(&satuans).Error
	if err != nil {
		return satuans, err
	}
	return satuans, nil

}
func (r *satuanRepository) DeleteByIDSatuan(ID int) (entity.Satuan, error) {
	var satuan entity.Satuan
	err := r.db.Where("id = ? ", ID).Delete(&satuan).Error
	if err != nil {
		return satuan, err
	}
	return satuan, nil

}

//Generated by Micagen at 08 Desember 2021
